version: "3"

services:
  redis:
    image: redis
    ports:
      - "6379:6379"
  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
  db:
    image: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - divocdata:/var/lib/postgresql/data
  registry:
    image: dockerhub/registry:1.0.19
    environment:
      - connectionInfo_uri=jdbc:postgresql://db:5432/postgres
      - connectionInfo_username=postgres
      - connectionInfo_password=postgres
    #      - elastic_search_connection_url=es:9200
    #      - search_provider=io.opensaber.registry.service.ElasticSearchService
    #command: java -Xms1024m -Xmx2048m -XX:+UseG1GC -Dserver.port=8081 -jar /home/opensaber/registry.jar
    ports:
      - "8081:8081"
    depends_on:
      - db
  keycloak:
    image: dockerhub/keycloak
    environment:
      - DB_VENDOR=postgres
      - DB_ADDR=db
      - DB_PORT=5432
      - DB_DATABASE=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
    #      - ./keycloak-mobile-number-login-spi/themes:/opt/jboss/keycloak/themes/
    healthcheck:
      test:
        ["CMD", "curl", "-f", "http://localhost:9990"]
      interval: 30s
      timeout: 10s
      retries: 4
    ports:
      - "8080:8080"
      - "9990:9990"
    depends_on:
      - db
  flagr:
    image: checkr/flagr
    environment:
      FLAGR_DB_DBDRIVER: postgres
      FLAGR_DB_DBCONNECTIONSTR: postgres://postgres:postgres@db:5432/postgres?sslmode=disable
      HOST: 0.0.0.0
      FLAGR_WEB_PREFIX: /config
    ports:
      - "18000:18000"
    depends_on:
      - db
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"
      ZOOKEEPER_TICK_TIME: "2000"
  kafka:
    image: confluentinc/cp-kafka:5.2.5-10
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: "1"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092,OUTSIDE://localhost:9094"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
    healthcheck:
      test:
        ["CMD", "kafka-topics", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 4
  clickhouse-server:
    image: yandex/clickhouse-server
    ports:
      - "8123:8123"
      - "9000:9000"
  vaccination_api:
    image: dockerhub/vaccination_api:1.0.26
    environment:
      REGISTRY_URL: "http://registry:8081"
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KEYCLOAK_URL: "http://keycloak:8080/auth"
      DB_HOST: db
      CERTIFICATE_UPDATE_LIMIT: 10
    ports:
      - "8000:8000"
    depends_on:
      - kafka
      - keycloak
  portal_api:
    image: dockerhub/portal_api:1.0.15
    ports:
      - "8001:8001"
    environment:
      REGISTRY_URL: "http://registry:8081"
      KEYCLOAK_URL: "http://keycloak:8080/auth"
      CLICK_HOUSE_URL: tcp://clickhouse-server:9000?debug=true
      ADMIN_API_CLIENT_SECRET: 1d9a5c6c-0c23-47e2-850c-3d04b0b56d87
      DB_HOST: db
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka
      - keycloak
  analytics_feed:
    image: dockerhub/analytics_feed:1.0.17
    environment:
      CLICK_HOUSE_URL: tcp://clickhouse-server:9000?debug=true
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - clickhouse-server
  certificate_processor:
    image: dockerhub/certificate_processor:1.0.16
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      REGISTRY_URL: "http://registry:8081"
      KEYCLOAK_URL: "http://keycloak:8080/auth"
      ADMIN_API_CLIENT_SECRET: 1d9a5c6c-0c23-47e2-850c-3d04b0b56d87
    depends_on:
      - registry
  certificate_signer:
    image: dockerhub/certificate_signer
    environment:
      REDIS_URL: redis://redis:6379
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      REGISTRY_URL: "http://registry:8081"
      DEFAULT_TOTAL_DOSES_COUNT: 2
    depends_on:
      - kafka
  nginx:
    image: dockerhub/nginx
    ports:
      - "80:80"
    depends_on:
      - vaccination_api
      - portal_api
  notification-service:
    image: dockerhub/notification-service:1.0.15
    ports:
      - "8765:8765"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SMS_AUTH_KEY: xxxx
      SENDER_EMAIL: xxxx@mail.com
      SENDER_PASSWORD: xxxx
    depends_on:
      - kafka
  digilocker_support_api:
    image: dockerhub/digilocker_support_api:1.0.58
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      REGISTRY_URL: "http://registry:8081"
      DIGILOCKER_HMAC_AUTHKEY: "UPDATE_KEY_GIVEN_IN_DIGILOCKER"
      KEYCLOAK_URL: "http://keycloak:8080/auth"
      POLLING_STATES: "goa,manipur,punjab,uttar pradesh,uttarakhand"
  digilocker-support-api-v2:
    image: dockerhub/digilocker_support_api:1.0.58
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      REGISTRY_URL: "http://registry:8081"
      DIGILOCKER_HMAC_AUTHKEY: "UPDATE_KEY_GIVEN_IN_DIGILOCKER"
      KEYCLOAK_URL: "http://keycloak:8080/auth"
      POLLING_STATES: "goa,manipur,punjab,uttar pradesh,uttarakhand"
    ports:
      - "8007:8003"
  divoc-certification-ack:
    image: dockerhub/divoc-certification-ack:1.0.16
    environment:
      REGISTRY_URL: "http://registry:8081"
  reconciliation:
    image: dockerhub/reconciliation:1.0.3
    environment:
      REGISTRY_URL: "http://registry:8081"
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KEYCLOAK_URL: "http://keycloak:8080/auth"
  verification:
    image: dockerhub/verification:1.0.29
    ports:
      - "4000:80"
volumes:
  divocdata: